{
  "extends": [
    "airbnb",
    "plugin:import/typescript"
  ],
  "plugins": ["jest", "@typescript-eslint"],
  "parser": "@typescript-eslint/parser",
  "env": {
    "es6": true,
    "browser": true,
    "jest/globals": true
  },
  "ignorePatterns": [ "app_home/*", "/**/*.d.ts" ],
  "settings": {
    "import/core-modules": ["electron"]
  },
  "rules": {
    "arrow-body-style": "off",
    "arrow-parens": ["error", "as-needed"],
    "class-methods-use-this": "off",
    "comma-dangle": ["error", {
      "arrays": "always-multiline",
      "imports": "always-multiline",
      "exports": "always-multiline",
      "objects": "always-multiline",
      "functions": "never"
    }],
    "implicit-arrow-linebreak": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "max-len": ["error", { "code": 140 }],
    "no-param-reassign": ["error", { "props": false }],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-shadow": "off",
    "no-underscore-dangle": "off",
    "operator-linebreak": ["error", "after"],
    "prefer-destructuring": "off",
    "react/destructuring-assignment": "off",
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx", ".tsx"] }],
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-curly-newline": "off",
    "react/prop-types": "off",
    "react/prefer-stateless-function": "off",
    // Typescript specific
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error", { "functions": false, "classes": true }]
  }
}
